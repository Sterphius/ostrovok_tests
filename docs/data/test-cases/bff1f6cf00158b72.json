{"uid":"bff1f6cf00158b72","name":"test_covid_restrictions[ru-ru]","fullName":"tests.API.test_ostrovok_api#test_covid_restrictions","historyId":"d63c14a9fdaa1c66172fb4ee86afb951","time":{"start":1681328377698,"stop":1681328377800,"duration":102},"status":"skipped","statusMessage":"XFAIL RU results are broken\n\nAssertionError: assert failed due to validation error(s):\n  - errors: extra keys not allowed (actual: 'not_found')\n  - data: required key not provided","statusTrace":"ostrovok = <utils.base_session.BaseSession object at 0x1045b17d0>, country_code = 'ru', language = 'ru'\n\n    @allure.tag('API')\n    @allure.label('owner', 'Sterphius')\n    @allure.feature('API')\n    @allure.story('covid_restrictions_from_blog')\n    @allure.severity(Severity.CRITICAL)\n    @pytest.mark.parametrize('country_code',\n                             ['us',\n                              pytest.param('ru', marks=pytest.mark.xfail(reason='RU results are broken'))])\n    @pytest.mark.parametrize('language', ['en', 'ru'])\n    def test_covid_restrictions(ostrovok, country_code, language):\n        result: Response = ostrovok.get(url='/api/about/v1/covid_restrictions_from_blog/', params={\n            'country_code': country_code,\n            'lang': language\n        })\n    \n        assert result.status_code == 200\n>       assert result.json() == S(covid_restrictions_schema)\nE       AssertionError: assert failed due to validation error(s):\nE         - errors: extra keys not allowed (actual: 'not_found')\nE         - data: required key not provided\n\ntests/API/test_ostrovok_api.py:44: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"load_env","time":{"start":1681328373586,"stop":1681328373587,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"ostrovok","time":{"start":1681328373587,"stop":1681328373587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL RU results are broken\n\nAssertionError: assert failed due to validation error(s):\n  - errors: extra keys not allowed (actual: 'not_found')\n  - data: required key not provided","statusTrace":"ostrovok = <utils.base_session.BaseSession object at 0x1045b17d0>, country_code = 'ru', language = 'ru'\n\n    @allure.tag('API')\n    @allure.label('owner', 'Sterphius')\n    @allure.feature('API')\n    @allure.story('covid_restrictions_from_blog')\n    @allure.severity(Severity.CRITICAL)\n    @pytest.mark.parametrize('country_code',\n                             ['us',\n                              pytest.param('ru', marks=pytest.mark.xfail(reason='RU results are broken'))])\n    @pytest.mark.parametrize('language', ['en', 'ru'])\n    def test_covid_restrictions(ostrovok, country_code, language):\n        result: Response = ostrovok.get(url='/api/about/v1/covid_restrictions_from_blog/', params={\n            'country_code': country_code,\n            'lang': language\n        })\n    \n        assert result.status_code == 200\n>       assert result.json() == S(covid_restrictions_schema)\nE       AssertionError: assert failed due to validation error(s):\nE         - errors: extra keys not allowed (actual: 'not_found')\nE         - data: required key not provided\n\ntests/API/test_ostrovok_api.py:44: AssertionError","steps":[{"name":"GET /api/about/v1/covid_restrictions_from_blog/","time":{"start":1681328377698,"stop":1681328377799,"duration":101},"status":"passed","steps":[],"attachments":[{"uid":"b2107e0ccb9a4425","name":"Request 200","source":"b2107e0ccb9a4425.txt","type":"text/plain","size":396},{"uid":"de07ac426514ecf0","name":"Response 200","source":"de07ac426514ecf0.json","type":"application/json","size":52}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"feature","value":"API"},{"name":"story","value":"covid_restrictions_from_blog"},{"name":"owner","value":"Sterphius"},{"name":"tag","value":"API"},{"name":"severity","value":"critical"},{"name":"tag","value":"@pytest.mark.xfail(reason='RU results are broken')"},{"name":"parentSuite","value":"tests.API"},{"name":"suite","value":"test_ostrovok_api"},{"name":"host","value":"Alexeys-MacBook-Pro.local"},{"name":"thread","value":"2671-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.API.test_ostrovok_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"country_code","value":"'ru'"},{"name":"language","value":"'ru'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","owner":"Sterphius","retries":[],"categories":[],"tags":["@pytest.mark.xfail(reason='RU results are broken')","API"]},"source":"bff1f6cf00158b72.json","parameterValues":["'ru'","'ru'"]}